@page
@model AtosLearning.Pages.ResultsModel
@using System.Diagnostics
@using AtosLearning.Models
@using AtosLearningAPI.Model

@{
}


<head>
    <meta charset="utf-8" />
    <title>Resultado</title>
    <link href="css/resultado.css" rel="stylesheet" />
    <link href="css/homepage.css" rel="stylesheet" />
</head>
<header class="min-vw-100 display-flex flex-row justify-content-between align-items-center px-5">
    <div class="my-flex-row">

        <div class="my-flex-column me-1">
            <h2 class="m-0 blue d-inline-block fs-1" onclick="location.href='/Homepage'" style="cursor:pointer;">AtosLearning</h2>
            <h4 class="yellow d-inline-block fs-">Resultados</h4>
        </div>
        <div class="my-flex-column justify-content-center mb-1">
            <h5 class="blue">Profesores</h5>
        </div>
    </div>
    <div class="my-flex-row">
        <div class="my-flex-column align-items-center me-2">
            <h4>@Model.CurrentUser.Name @Model.CurrentUser.Surname</h4>
            <h5>Ver mi perfil</h5>
        </div>
        <div class="my-flex-column align-items-center justify-content-center">
            <img id="user-img" src="images/profile.png" alt="profile"/>
        </div>
    </div>
</header>



<div class="text-center w-100 h-auto py-2 mb-3 "
     style="
      background-image: url('@Model.CurrentExam.ImageUrl');
     ">
    <h1 class="mb-0 d-inline py-1 px-2 rounded"
        style="
            background-color: rgba(0, 0, 0, 0.5);
        ">
        @Model.CurrentExam.Title
    </h1>
</div>

<body>
    <h2 class="text-dark text-center fs-4 mb-3">Exámenes Enviados</h2>
        <div class="container shadow-sm mb-3">
            <div class="row border-bottom py-1">
                <span class="w-30 text-center fs-7 fw-bold">
                    Nombre
                </span>
                <span class="w-20 text-center fs-7 fw-bold">
                    Estado
                </span>
                <span class="w-20 text-center fs-7 fw-bold">
                    Calificación
                </span>
                <span class="w-30 text-center fs-7 fw-bold">
                    Fecha
                </span>
            </div>
            @foreach (ExamSubmission submission in Model.ExamSubmissions)
            {
                <div class="row border-bottom py-1">
                    <span class="w-30 text-center fs-7">
                        @submission.UserName
                    </span>
                    <span class="w-20 text-center fs-7">
                        @(submission.Score >= 60 ? "APROBADO" : "REPROBADO")
                    </span>
                    <span class="w-20 text-center fs-7">
                        @submission.Score.ToString()
                    </span>
                    <span class="w-30 text-center fs-7">
                        @submission.Date.ToString().Substring(0, 17)
                    </span>
                </div>
            }
        
        </div>

<div class="container mb-4">
    <div class="row">
        <div class="col w-45 p-0 me-1">
            <div class="card w-100 mx-auto">
                <div class="card-header">
                    Errores por pregunta
                </div>
                <div class="card-body">
                    <canvas id="errorsChart"></canvas>
                </div>
    
            </div>
        </div>

        <div class="col w-45 p-0 ms-1">
            <div class="card w-100 mx-auto">
                <div class="card-header">
                    Examenes Completados
                </div>
                <div class="card-body">
                    <canvas id="pendingChart"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

<h2 class="text-dark text-center fs-4 mb-3">Exámenes Faltantes</h2>
<div class="container shadow-sm w-45">
    <div class="row border-bottom py-1">
        <span class="w-50 text-center fs-7 fw-bold">
            Nombre
        </span>
        <span class="w-50 text-center fs-7 fw-bold">
            Email
        </span>
    </div>
    @foreach (User user in Model.PendingSubmissions)
    {
        <div class="row border-bottom py-1">
            <span class="w-50 text-center fs-7">
                @(user.Name + " " + user.Surname)
            </span>
            <span class="w-50 text-center fs-7">
                @user.Email
            </span>
        </div>
    }

</div>
</body>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.min.js"></script>
<script type="text/javascript">
    var questionStats = @Json.Serialize(Model.QuestionStats);
    
    var errorsChart = document.getElementById('errorsChart').getContext('2d');
    var myerrorsChart = new Chart(errorsChart,  {
        type: 'bar',
        data: {
            labels: questionStats.map(function(stat) { return stat.question; }),
            datasets: [{
                label: 'Respuestas incorrectas',
                data: questionStats.map(function(stat) { return stat.incorrectAnswers; }),
                backgroundColor: 'rgba(242, 76, 61, 1.0)'
                }]
        },
        options: {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true,
                        max: questionStats.reduce(function (max, stat) {
                                                                            return stat.incorrectAnswers > max ? stat.incorrectAnswers : max;
                                                                          }, -Infinity) + 1  ,
                        stepSize: 1        
                    }
                }]
            }
        }
        });
    
    
    var pendingSubmissions = @Json.Serialize(Model.PendingSubmissions);
    var examSubmissions = @Json.Serialize(Model.ExamSubmissions);

    var pendingChart = document.getElementById('pendingChart').getContext('2d');
    var myPendingChart = new Chart(pendingChart,  {
        type: 'pie',
        data: {
            labels: ["Completados", "Pendientes"],
            datasets: [{
                data: [examSubmissions.length, pendingSubmissions.length],
                backgroundColor: ['rgba(173, 231, 146, 1.0)', "rgba(242, 76, 61,1.0)"]
                }]
        }
        });
</script>